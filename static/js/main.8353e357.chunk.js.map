{"version":3,"sources":["components/matches/Matches.module.css","firebase.js","components/menuAppBar/dinderTrans2.png","components/menuAppBar/MenuAppBar.js","components/homePage/HomePage.jsx","components/profile/imageUploader/index.jsx","components/profile/Profile.jsx","components/login-register/Register.js","components/login-register/Login.js","components/chosenMatch/ChosenMatch.jsx","components/matches/Matches.jsx","components/chat/chatHead.jsx","components/chat/chatService.js","components/chat/Message.jsx","components/chat/Chat.jsx","components/app/App.jsx","components/login-register/login-register.reducer.js","components/users/users.reducer.js","redux/store.js","index.js","components/chat/Chat.module.css"],"names":["module","exports","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","storage","useStyles","makeStyles","theme","root","flexGrow","width","marginTop","fontFamily","logoPaper","margin","spacing","background","padding","logo","appBar","zIndex","title","fontSize","menu","noOutline","outline","MenuAppBar","classes","React","useState","anchorEl","setAnchorEl","dispatch","Boolean","useDispatch","user","useSelector","state","currentUser","className","CssBaseline","AppBar","elevation","Grid","container","justify","alignItems","item","xs","Paper","src","alt","aria-controls","aria-haspopup","onClick","event","currentTarget","id","keepMounted","open","onClose","MenuItem","component","Link","to","uid","signOut","then","type","catch","error","console","log","message","alreadyRemoved","HomePage","users","allUsers","characters","setCharacters","lastDirection","setLastDirection","isSwipeView","setIsSwipeView","childRefs","useMemo","Array","length","fill","map","i","createRef","filterProfiles","allProfiles","filter","liked","includes","disliked","matches","useEffect","filteredUsers","outOfFrame","userId","updateProfileMatches","userOneId","userTwoId","find","collection","doc","update","FieldValue","arrayUnion","chatRoomDocId","set","messages","isTyping","createChatRoom","updateDataBase","payload","updateDB","arrProp","userIdToBeAdded","get","data","swipe","dir","cardsLeft","person","toBeRemoved","index","indexOf","push","current","cardViewSwipe","usersToPrint","changeViewState","style","minWidth","color","Button","variant","res","forEach","ref","href","rel","character","onSwipe","direction","nameToDelete","swiped","name","onCardLeftScreen","backgroundImage","images","Card","CardActionArea","CardMedia","image","CardContent","Typography","gutterBottom","split","age","CardActions","size","paper","position","height","backgroundColor","display","divImg","backgroundSize","backgroundRepeat","backgroundPosition","smallBtn","top","right","ImageUploaderContainer","imgUrl","replaceImgUrl","updateImages","accept","input","multiple","onChange","e","target","files","file","dotPossition","lastIndexOf","newFileName","slice","Date","now","uploadTask","child","put","on","snapshot","progress","bytesTransferred","totalBytes","TaskState","PAUSED","RUNNING","getDownloadURL","downloadURL","a","newImagesArr","handleUploadClick","htmlFor","Tooltip","arrow","TransitionComponent","Zoom","placement","Fab","borderBottomColor","borderBottom","button","formControl","CssTextField","withStyles","borderColor","TextField","Profile","userRef","aboutYou","setAboutYou","passionsFromDb","passions","join","setPassions","gender","setGender","sexualOrientation","orientation","setOrientation","regionFromDb","country","countryFromDb","region","setRegion","allCountriesInARegion","setAllCountriesInARegion","livingIn","setLivingIn","userImages","setUserImages","jobTitle","setJobTitle","company","setCompany","collageOrUni","collegeOrUni","setCollegeOrUni","fetch","json","err","exists","imagesArraySet","setImagesArrLengthAndFill","imagesArr","url","replacedImageUrls","maxSize","resultArr","noValidate","autoComplete","wrap","marginBottom","label","multiline","rows","rowsMax","fullWidth","value","onBlur","placeholder","justifyContent","RadioGroup","row","aria-flowto","aria-label","FormControlLabel","radio","control","Radio","FormControl","Select","labelId","InputLabel","disabled","alpha2Code","defaultProfilePicUrl","maxWidth","lineHeight","googleIcon","marginRight","Register","setCurrentUser","emailInput","setEmailInput","passInput","setPassInput","firstNameInput","setFirstNameInput","lastNameInput","setLastNameInput","ageInput","setAgeInput","isPassVisible","setIsPassVisible","changeInput","field","createUserInDb","obj","Container","align","autoFocus","trim","ev","OutlinedInput","endAdornment","InputAdornment","IconButton","onMouseDown","preventDefault","edge","Visibility","VisibilityOff","setPersistence","Auth","Persistence","LOCAL","createUserWithEmailAndPassword","fullName","userInDb","email","city","mediaProfiles","youtubeSong","chats","isOnline","provider","GoogleAuthProvider","signInWithPopup","displayName","additionalUserInfo","profile","picture","createUpdateGoogleUserInDb","form","Login","usernameInput","setUsernameInput","changeUsernameInput","changePasswordInput","signInWithEmailAndPassword","authToken","textAlign","textField","ChosenMatch","chosenProfileId","styles","chosenUser","setChosenUser","setImages","focusedUser","imagesToDisplay","renderOverlay","overlayBackgroundColor","flexColumn","flexDirection","boxShadow","expanded","left","media","colorBlack","btnContainer","Matches","getChosenMatchId","moreDetailsCardKey","setMoreDetailsCardKey","setMatches","isLoading","setIsLoading","allMatches","dislikeUser","currUserMatchesIds","matchId","currUserLikedProfilesIds","likedId","removedUser","removedUserMatches","updatedUsers","newMatches","selectedUserId","currentUserId","delete","deleteChatRoom","chosenId","btnStyle","head","timestamp","active","borderRadius","missed","ChatHead","selectTargetChat","chat","isActive","targetUserId","targetUser","currentChat","setCurrentChat","hasMissedMessages","setHasMissedMessages","lastMessageSender","sender","border","Avatar","messageStyle","userImage","chatClasses","createdAt","toDateString","Chat","formValue","setFormValue","allChats","setAllChats","targetChatId","setTargetChatId","dummyDiv","useRef","chatRoomsRef","where","onSnapshot","snapShot","tempAllChats","unshift","sortedByTimeChats","sort","b","lastMessageTimestamp","scrollIntoView","behavior","block","inline","sendMessage","chatId","findIndex","chatContainer","profilesInChat","innerDivChat","messageContainer","chatForm","onSubmit","App","isChatOpened","setIsChatOpened","setChosenProfileId","onAuthStateChanged","element","CircularProgress","exact","path","initialState","userReducer","action","allUsersReducer","rootReducer","combineReducers","store","createStore","compose","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8353e357.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btnStyle\":\"Matches_btnStyle__1K_MD\"};","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBTxAOZJx56d3i9hCiD5ZcYpnp4cvfady4\",\r\n    authDomain: \"fir-project-d9b09.firebaseapp.com\",\r\n    projectId: \"fir-project-d9b09\",\r\n    storageBucket: \"fir-project-d9b09.appspot.com\",\r\n    messagingSenderId: \"74333153272\",\r\n    appId: \"1:74333153272:web:ebfbec43f8b31327d1980d\"\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst db = firebase.firestore();\r\nconst storage = firebase.storage();\r\nconst auth = firebase.auth();\r\n\r\nexport { db, storage, auth };\r\nexport default firebase;","export default __webpack_public_path__ + \"static/media/dinderTrans2.19d7ad87.png\";","import React, { createRef } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Button from '@material-ui/core/Button';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Link } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport firebase, { auth } from '../../firebase';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\n\r\nimport logo from './dinderTrans2.png'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    width: '100%',\r\n    marginTop: '50px',\r\n    fontFamily: 'Nunito',\r\n  },\r\n  logoPaper: {\r\n    margin: `${theme.spacing(1)}px auto`,\r\n    background: 'rgba(255,255,255,0.3)',\r\n    padding: '0 10px',\r\n  },\r\n  logo: {\r\n    width: '100px',\r\n  },\r\n  appBar: {\r\n    zIndex: '0',\r\n    background: 'none',\r\n    padding: `0 ${theme.spacing(3)}px`\r\n  },\r\n  title: {\r\n    fontSize: '3rem',\r\n  },\r\n  menu: {\r\n    fontSize: '35px'\r\n  },\r\n  noOutline: {\r\n    outline: 'none!important',\r\n  },\r\n}));\r\n\r\nexport default function MenuAppBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(state => state.currentUser);\r\n\r\n\r\n  const handleMenu = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const logout = () => {\r\n    auth.signOut()\r\n    .then(dispatch({type: 'userLoggedOut'}))\r\n    .catch(error => console.log(error.message))\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar elevation={0} className={classes.appBar}>\r\n        <Grid\r\n          container\r\n          justify='space-between'\r\n          alignItems='center'\r\n        >\r\n          <Grid item xs={1}>\r\n            <Paper className={classes.logoPaper} elevation={10}>\r\n              <img src={logo} className={classes.logo} alt='logo'></img>\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={10}>\r\n            {/* <Typography variant=\"h4\" className={classes.title}>\r\n              DINDER!\r\n            </Typography> */}\r\n          </Grid>\r\n          <Grid container xs={1} justify='flex-end'>\r\n            <MenuIcon className={classes.menu} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleMenu} />\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={handleClose}\r\n            >\r\n              <MenuItem noOutline component={Link} to='/'>Home</MenuItem>\r\n              {\r\n                user.uid ?\r\n                  <div>\r\n                    <MenuItem component={Link} to='/matches'>Kotenca</MenuItem>\r\n                    <MenuItem component={Link} to='/profile'>Profile</MenuItem>\r\n                    <MenuItem component={Link} to='/' onClick={() => {logout()}} >Logout</MenuItem>\r\n                  </div>\r\n                  :\r\n                  <div>\r\n                    <MenuItem component={Link} to='/register'>Register</MenuItem>\r\n                    <MenuItem component={Link} to='/login'>Login</MenuItem>\r\n                  </div>\r\n              }\r\n            </Menu>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}","import { Hidden } from '@material-ui/core';\r\nimport React, { useState, useMemo, useEffect } from 'react';\r\n// import TinderCard from '../react-tinder-card/index'\r\nimport TinderCard from 'react-tinder-card';\r\nimport './HomePage.css';\r\nimport TouchAppIcon from '@material-ui/icons/TouchApp';\r\nimport ViewModuleIcon from '@material-ui/icons/ViewModule';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport firebase, { db } from '../../firebase';\r\nimport { spacing } from '@material-ui/system';\r\n\r\nconst alreadyRemoved = [];\r\n\r\nfunction HomePage () {\r\n  const dispatch = useDispatch();\r\n  const currentUser = useSelector(state => state.currentUser);\r\n  const users = useSelector(state => state.allUsers);\r\n  const [characters, setCharacters] = useState([]);\r\n  const [lastDirection, setLastDirection] = useState();\r\n  const [isSwipeView, setIsSwipeView] = useState(true);\r\n  const childRefs = useMemo(() => Array(characters.length).fill(0).map(i => React.createRef()), [characters.length]); \r\n  \r\n  useEffect(() => {\r\n    const filteredUsers = filterProfiles(users, currentUser);\r\n    setCharacters(filteredUsers);\r\n  }, [])\r\n  \r\n  function filterProfiles (allProfiles, currentUser) {\r\n    return allProfiles.filter(user => !currentUser.liked.includes(user.uid) && !currentUser.disliked.includes(user.uid) && !currentUser.matches.includes(user.uid) && currentUser.uid !== user.uid)\r\n  }\r\n\r\n  const swiped = (direction, userIdToBeAdded, nameToDelete) => {\r\n    let arrProp = '';\r\n    switch(direction){\r\n      case 'left' : arrProp = 'disliked';\r\n      break;\r\n      case 'right' : arrProp = 'liked';\r\n      break;\r\n      case 'up' : arrProp = 'matches';\r\n      break;\r\n      case 'down' : arrProp = 'disliked';\r\n      break;\r\n      default: break;\r\n    }\r\n    updateDB(arrProp, userIdToBeAdded);\r\n    setLastDirection(direction);\r\n    alreadyRemoved.push(userIdToBeAdded);\r\n    // updateProfileMatches(currentUser.uid, userIdToBeAdded);\r\n  }\r\n\r\n  const outOfFrame = (userId) => {\r\n    console.log(userId + ' left the screen!!@#@!$!%@!$%#@^&#%&*@!$&^');\r\n    // updateDB(arrProp, userIdToBeAdded);\r\n  }\r\n\r\n  const updateProfileMatches = (userOneId, userTwoId) => {\r\n    const userOneMatches = users.find(user => user.uid === userOneId).matches;\r\n    const userTwoMatches = users.find(user => user.uid === userTwoId).matches;\r\n    db.collection('users').doc(userOneId).update({\r\n      matches: firebase.firestore.FieldValue.arrayUnion(userTwoId),\r\n    })\r\n\r\n    // Here we are creating the new chatRooms!\r\n    createChatRoom(userOneId, userTwoId);\r\n\r\n    db.collection('users').doc(userTwoId).update({\r\n      matches: firebase.firestore.FieldValue.arrayUnion(userOneId),\r\n    })\r\n    .then(() => {\r\n      let updatedUsers = users.map(user => {\r\n        // if(user.uid === userOneId) {\r\n        //   if(!user.matches.includes(userTwoId)) {\r\n        //     user.matches = [...user.matches, userTwoId];\r\n        //     console.log('Update-vame matches na user: ', userOneId, '---> na --->', user.matches);\r\n        //   }\r\n        // }\r\n        if (user.uid === userTwoId) {\r\n          user.matches = [...user.matches, userOneId];\r\n          console.log('Update-vame matches na user: ', userTwoId, '---> na --->', user.matches);\r\n        }\r\n        return user;\r\n      });\r\n      updateDataBase( 'getAllUsers', updatedUsers);\r\n      updateDataBase( 'userChangedmatches', userTwoId);\r\n    })\r\n  }\r\n\r\n  // To be moved to Service file:\r\n  function createChatRoom(userOneId, userTwoId) {\r\n    const chatRoomDocId = userOneId > userTwoId ? `${userTwoId}_${userOneId}` : `${userOneId}_${userTwoId}`;\r\n    db.collection('chatRooms').doc(chatRoomDocId).set({\r\n      messages: [],\r\n      users: [userOneId, userTwoId],\r\n      isTyping: false, \r\n    })\r\n      .then(() => console.log(\"Successfully created chatRoom with users: \", [userOneId, userTwoId]))\r\n      .catch((error) => console.log(\"Error on chatRoom creation: \", error.message))\r\n  }\r\n\r\n  // TODO: да се зареждат картичките, които не се движат, иначе покажа и тези, които летят още...\r\n\r\n  function updateDataBase(type, payload) {\r\n    dispatch({ type: type, payload: payload});\r\n  }\r\n\r\n  const updateDB = (arrProp, userIdToBeAdded) => {\r\n    \r\n    console.log('arrProp', arrProp)\r\n\r\n    arrProp !== 'matches' && db.collection('users').doc(currentUser.uid).update({\r\n      [arrProp]: firebase.firestore.FieldValue.arrayUnion(userIdToBeAdded),\r\n    })\r\n    .then(() => {\r\n      updateDataBase(`userChanged${arrProp}`, userIdToBeAdded)\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error updating document: \", error);\r\n    });\r\n\r\n    outOfFrame(userIdToBeAdded)\r\n\r\n    arrProp === 'liked' && db.collection('users').doc(userIdToBeAdded).get()\r\n      .then(doc => {\r\n        if (doc.data().liked.includes(currentUser.uid)) {\r\n          // We are updating the matches of currentUser and lokedUser\r\n          updateProfileMatches(currentUser.uid, userIdToBeAdded)\r\n        }\r\n      })\r\n      // We are updating the matches of currentUser and lokedUser\r\n    arrProp === 'matches' && updateProfileMatches(currentUser.uid, userIdToBeAdded)\r\n  }\r\n\r\n  const swipe = (dir) => {\r\n    const cardsLeft = characters.filter(person => !alreadyRemoved.includes(person.uid));\r\n    if (cardsLeft.length) {\r\n      const toBeRemoved = cardsLeft[cardsLeft.length - 1].uid; // Find the card object to be removed\r\n      const index = characters.map(person => person.uid).indexOf(toBeRemoved); // Find the index of which to make the reference to\r\n      alreadyRemoved.push(toBeRemoved); // Make sure the next card gets removed next time if this card do not have time to exit the screen\r\n      console.log('!!!!!!!!!!!Index: ', index)\r\n      console.log('!!!!!!!!!!!childRefs: ', childRefs)\r\n      console.log('!!!!!!!!!!!alreadyRemoved: ', alreadyRemoved)\r\n      console.log('!!!!!!!!!!!characters: ', characters)\r\n      childRefs[index].current.swipe(dir); // Swipe the card!\r\n\r\n      // charactersState = charactersState.filter(character => character.uid !== toBeRemoved);\r\n      // setCharacters(charactersState);\r\n\r\n      // const userIdToBeAdded = cardsLeft[cardsLeft.length - 1].uid;\r\n      // const arrProp = dir === 'right' ? 'liked' : 'disliked';\r\n\r\n      // updateDB(arrProp, userIdToBeAdded);\r\n    }\r\n  }\r\n\r\n  const cardViewSwipe = (arrProp, userIdToBeAdded) => {\r\n    \r\n    console.log('arrProp', arrProp)\r\n    db.collection('users').doc(currentUser.uid).update({\r\n      [arrProp]: [...currentUser[arrProp], userIdToBeAdded],\r\n    })\r\n    .then(() => {\r\n      // currentUser[arrProp].push(userIdToBeAdded);\r\n      // updateDataBase('userLoggedIn', currentUser)\r\n      const currentUserNewState = {\r\n        ...currentUser,\r\n        [arrProp]: [...currentUser[arrProp], userIdToBeAdded],\r\n      }\r\n      // currentUser[arrProp].push(userIdToBeAdded);\r\n      updateDataBase('userLoggedIn', currentUserNewState)\r\n      // dispatch({ type: 'userLoggedIn', payload: currentUser})\r\n      // console.log('Updated currentUser liked Array: ', currentUser[arrProp], ' with: ', userIdToBeAdded)\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error updating document: \", error);\r\n    });\r\n\r\n    arrProp === 'liked' && db.collection('users').doc(userIdToBeAdded).get()\r\n      .then(doc => {\r\n        if (doc.data().liked.includes(currentUser.uid)) {\r\n          // We are updating the matches of currentUser and lokedUser\r\n          updateProfileMatches(currentUser.uid, userIdToBeAdded)\r\n        }\r\n      })\r\n    arrProp === 'matches' && db.collection('users').doc(userIdToBeAdded).get()\r\n      .then(() => {\r\n        // We are updating the matches of currentUser and lokedUser\r\n        updateProfileMatches(currentUser.uid, userIdToBeAdded)\r\n      })\r\n      const usersToPrint = filterProfiles(users, currentUser).filter(user => user.uid !== userIdToBeAdded);\r\n\r\n      setCharacters(usersToPrint);\r\n  }\r\n\r\n  const resetCurrentUser = () => {\r\n    db.collection('users').doc(currentUser.uid).update({\r\n      liked: [],\r\n      disliked: [],\r\n      matches: [],\r\n    }).then(() => {\r\n      dispatch({ type: 'userLoggedIn', payload: {...currentUser, liked: [], disliked: [], matches: []} })\r\n      console.log('Successfully reset currentUser: ', currentUser)\r\n    })\r\n    // db.collection('chatRooms').get()\r\n    // .then(res => res.forEach(doc => {\r\n    //   if(doc.id.includes(currentUser.uid)) {\r\n    //     db.collection('chatRooms').doc(doc.id).delete()\r\n    //       .then(() => console.log('Successfully deleted the chatRooms for user: ', currentUser))\r\n    //   }\r\n    // }))\r\n  }\r\n\r\n  const resetAllUser = () => {\r\n    db.collection('users').get()\r\n    .then(res => res.forEach(doc => {\r\n      doc.ref.update({\r\n        // liked: [],\r\n        disliked: [],\r\n        matches: [],\r\n      })\r\n    }))\r\n    .then(() => {\r\n      \r\n      dispatch({ type: 'getAllUsers', payload: users.map(user => user.matches = []) });\r\n    })\r\n    // Here we are deleting ALL chats\r\n    // db.collection('chatRooms').set({});\r\n  }\r\n\r\n  const changeViewState = () => {\r\n    setIsSwipeView(!isSwipeView);\r\n  }\r\n\r\n  return (\r\n    <div style={{minWidth: '450px', color: 'white'}}> \r\n      <Button onClick={resetCurrentUser} variant='contained' className={'resetButton'}>Reset currentUser</Button>\r\n      <Button onClick={resetAllUser} variant='contained' className={'resetButton'}>Reset all users</Button>\r\n\r\n      {isSwipeView ? (\r\n        <div style={{width: '85%', margin: '0 auto'}}>\r\n          <ViewModuleIcon onClick={changeViewState} fontSize='large' style={{marginTop: '20px'}} />\r\n          <link href='https://fonts.googleapis.com/css?family=Damion&display=swap' rel='stylesheet' />\r\n          <link href='https://fonts.googleapis.com/css?family=Alatsi&display=swap' rel='stylesheet' />\r\n          <h1 className={'homeTitle'}>React Tinder Card</h1>\r\n          <div className='cardContainer'>\r\n            {characters.map((character, index) =>\r\n              <TinderCard ref={childRefs[index]} className='swipe' key={character.uid} onSwipe={(dir) => {\r\n                swiped(dir, character.uid, character.name);\r\n                }} onCardLeftScreen={() => outOfFrame(character.uid)}>\r\n                <div style={{ backgroundImage: 'url(' + character.images[0] + ')' }} className='card'>\r\n                  <h3>{character.name}</h3>\r\n                </div>\r\n              </TinderCard>\r\n            )}\r\n          </div>\r\n          <div className='buttons'>\r\n            <button onClick={() => swipe('left')}>Swipe left!</button>\r\n            <button onClick={() => swipe('right')}>Swipe right!</button>\r\n          </div>\r\n          {lastDirection ? <h2 key={lastDirection} className='infoText'>You swiped {lastDirection}</h2> : <h2 className='infoText'>Swipe a card or press a button to get started!</h2>}\r\n\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <TouchAppIcon onClick={changeViewState} fontSize='large' style={{marginTop: '20px'}} />\r\n          <div className=\"containerCardView\">\r\n            <div className=\"containerCardView\">\r\n              {characters.map((user) =>\r\n                <Card elevation={20} className=\"root\" key={user.uid} >\r\n                  <CardActionArea>\r\n                    <CardMedia\r\n                      className=\"media\"\r\n                      image={user.images[0]}\r\n                      title={user.name}\r\n                    />\r\n                    <CardContent>\r\n                    <Typography className=\"colorBlack\" gutterBottom variant=\"h5\" component=\"h2\">\r\n                      {user.name.split(' ')[0]} {user.age}\r\n                    </Typography>\r\n                    {/* <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                      {user.description ? user.description : `From ${user.location}`}\r\n                    </Typography> */}\r\n                    </CardContent>\r\n                  </CardActionArea>\r\n                  <CardActions className=\"btnContainer\">\r\n                    <Button size=\"small\" color=\"primary\" onClick={() => cardViewSwipe('disliked', user.uid)}>\r\n                    Dislike\r\n                    </Button>\r\n                    <Button size=\"small\" color=\"primary\" onClick={() => cardViewSwipe('liked', user.uid)}>\r\n                    Like\r\n                    </Button>\r\n                  </CardActions>\r\n                </Card>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default HomePage;","import { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport Zoom from '@material-ui/core/Zoom';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddPhotoAlternateIcon from '@material-ui/icons/AddPhotoAlternate';\r\n\r\nimport firebase, { storage, db } from '../../../firebase';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        position: 'relative',\r\n        height: '200px',\r\n        width: '130px',\r\n        margin: '13px 13px',\r\n        backgroundColor: 'rgba(255,255,255,0.5)',\r\n        '& .MuiFab-root:hover': {\r\n            backgroundColor: '#e66465',\r\n            '& .MuiSvgIcon-root': {\r\n                color: 'rgb(225,225,225)'\r\n            },\r\n        },\r\n        '& input': {\r\n            display: 'none'\r\n        }\r\n    },\r\n    divImg: {\r\n        height: '100%',\r\n        backgroundSize: 'cover',\r\n        backgroundRepeat: 'no-repeat',\r\n        backgroundPosition: 'center',\r\n    },\r\n    smallBtn: {\r\n        position: 'absolute',\r\n        top: '-20px',\r\n        right: '-20px',\r\n        width: '40px',\r\n        height: '40px',\r\n        '& .MuiSvgIcon-root': {\r\n            width: '25px'\r\n        },\r\n        color: '#e66465',\r\n        background: 'rgb(225,225,225)',\r\n    },\r\n}));\r\n\r\nconst ImageUploaderContainer = ({ id, userId, imgUrl, replaceImgUrl, updateImages }) => {\r\n    const classes = useStyles();\r\n\r\n    const handleUploadClick = (e) => {\r\n        const data = e.target;\r\n        if (data.files && data.files[0]) {\r\n            let file = data.files[0];\r\n            let dotPossition = file.name.lastIndexOf('.');\r\n            let newFileName = file.name.slice(0, dotPossition) + Date.now();\r\n            console.log(newFileName);\r\n\r\n            const storageRef = firebase.storage().ref();\r\n            const uploadTask = storageRef.child(`${userId}/${newFileName}`).put(file);\r\n            \r\n            uploadTask.on('state_changed',\r\n                (snapshot) => {\r\n                    // Observe state change events such as progress, pause, and resume\r\n                    // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n                    var progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                    console.log('Upload is ' + progress + '% done');\r\n                    // eslint-disable-next-line default-case\r\n                    switch (snapshot.state) {\r\n                        case firebase.storage.TaskState.PAUSED: // or 'paused'\r\n                            console.log('Upload is paused');\r\n                            break;\r\n                        case firebase.storage.TaskState.RUNNING: // or 'running'\r\n                            console.log('Upload is running');\r\n                            break;\r\n                    }\r\n                },\r\n                (error) => {\r\n                    console.log('An error occurred on image upload ', error.message);\r\n                },\r\n                () => {\r\n                    // Handle successful uploads on complete\r\n                    uploadTask.snapshot.ref.getDownloadURL()\r\n                    .then((downloadURL) => {\r\n                        console.log('File available at', downloadURL);\r\n                        const newImagesArr = async () => await replaceImgUrl(id, downloadURL);\r\n                        newImagesArr().then((images) => updateImages(images));\r\n                    });\r\n                }\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Paper elevation={6} className={classes.paper}>\r\n                <div className={classes.divImg} style={{backgroundImage: `url(${imgUrl})`}}></div>\r\n                <input\r\n                    accept=\"image/*\"\r\n                    className={classes.input}\r\n                    id={`contained-button-file-${id}`}\r\n                    multiple={false}\r\n                    type=\"file\"\r\n                    onChange={e => handleUploadClick(e)}\r\n                />\r\n                <label htmlFor={`contained-button-file-${id}`}>\r\n                    <Tooltip title=\"Add Photo\" arrow TransitionComponent={Zoom} placement='right'>\r\n                        <Fab component=\"div\" className={classes.smallBtn}>\r\n                            <AddPhotoAlternateIcon />\r\n                        </Fab>\r\n                    </Tooltip>\r\n                </label>\r\n            </Paper>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ImageUploaderContainer;","import React, { useState, useEffect } from 'react';\r\nimport { makeStyles, withStyles, MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ImageUploaderContainer from './imageUploader';\r\n\r\nimport firebase, { auth, db } from '../../firebase';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '40vw',\r\n        minWidth: '400px',\r\n        margin: '0 auto',\r\n        '& .MuiSvgIcon-root.MuiSelect-icon ': {\r\n            color: 'white'\r\n        },\r\n        '& .MuiInput-underline:hover:not(.Mui-disabled):before': {\r\n            borderBottomColor: 'white'\r\n        },\r\n        '& .MuiInput-underline.Mui-disabled:before': {\r\n            borderBottom: '1px solid rgb(205,205,205)'\r\n        },\r\n        '& .MuiInput-underline:before': {\r\n            borderBottomColor: 'white',\r\n        },\r\n        '&:hover': {\r\n            borderBottomColor: 'red'\r\n        },\r\n        '& input.MuiInputBase-input.MuiInput-input': {\r\n            color: 'white',\r\n        },\r\n        '& div.MuiSelect-select.MuiSelect-selectMenu.MuiInputBase-input.MuiInput-input': {\r\n            color: 'white',\r\n        },\r\n    },\r\n    paper: {\r\n        margin: '5px 0',\r\n        // background: 'rgba(255, 255, 255, 0.5)',\r\n        background: 'none',\r\n        color: 'white',\r\n    },\r\n    item: {\r\n        width: '100%',\r\n        margin: '20px 0',\r\n    },\r\n    button: {\r\n        color: '#e66465',\r\n        background: '#9198e5',\r\n    },\r\n    input: {\r\n        display: 'none',\r\n        color: 'white',\r\n        '& .MuiInputBase-input': {\r\n            color: 'white',\r\n        },\r\n    },\r\n    formControl: {\r\n        '& .MuiSelect-select:focus': {\r\n            background: 'none', // rgba(255, 255,\t255, 0.3)\r\n        },\r\n        minWidth: '250px',\r\n        margin: 0,\r\n    },\r\n\r\n}));\r\n\r\nconst CssTextField = withStyles({\r\n    root: {\r\n        '& label': {\r\n            color: 'rgb(225, 225, 225)',\r\n            // fontFamily: 'Nunito',\r\n        },\r\n        '& label.Mui-focused': {\r\n            color: 'rgb(225, 225, 225)',\r\n            // fontFamily: 'Nunito',\r\n        },\r\n        '& .MuiInput-underline:before': {\r\n            borderBottomColor: 'white'\r\n        },\r\n        '& .MuiInput-underline:after': {\r\n            borderBottomColor: '#1976d2',\r\n        },\r\n        '& .MuiOutlinedInput-root': {\r\n            color: 'rgb(225, 225, 225)',\r\n            // fontFamily: 'Nunito',\r\n            '& fieldset': {\r\n                borderColor: 'rgb(225, 225, 225)',\r\n            },\r\n            '&:hover fieldset': {\r\n                borderColor: 'rgb(225, 225, 225)',\r\n            },\r\n        },\r\n    },\r\n})(TextField);\r\n\r\nconst Profile = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const user = useSelector(state => state.currentUser);\r\n\r\n    const userRef = db.collection('users').doc(user.uid);\r\n\r\n    const classes = useStyles();\r\n    const numberOfImageContainers = 6;\r\n\r\n    const [aboutYou, setAboutYou] = useState(user.aboutYou);\r\n    const passionsFromDb = user.passions.join(', ');\r\n    const [passions, setPassions] = useState(passionsFromDb);\r\n    const [gender, setGender] = useState(user.gender);\r\n    const [orientation, setOrientation] = useState(user.sexualOrientation);\r\n    const regionFromDb = user.country.split(' ')[0];\r\n    const countryFromDb = user.country.split(' ')[1];\r\n    const [region, setRegion] = useState(regionFromDb);\r\n    const [allCountriesInARegion, setAllCountriesInARegion] = useState([]);\r\n    const [livingIn, setLivingIn] = useState(countryFromDb);\r\n    const [userImages, setUserImages] = useState([]);\r\n    const [jobTitle, setJobTitle] = useState(user.jobTitle);\r\n    const [company, setCompany] = useState(user.company);\r\n    const [collegeOrUni, setCollegeOrUni] = useState(user.collageOrUni);\r\n\r\n    useEffect(() => {\r\n        region && fetch(`https://restcountries.eu/rest/v2/region/` + region)\r\n            .then(res => res.json())\r\n            .then(res => setAllCountriesInARegion(res))\r\n            .catch(err => console.log(err))\r\n    }, [region]);\r\n\r\n    useEffect(() => {\r\n        const docRef = db.collection('users').doc(`${user.uid}`);\r\n        docRef.get().then((doc) => {\r\n            if (doc.exists) {\r\n\r\n                const imagesArraySet = setImagesArrLengthAndFill(doc.data().images, numberOfImageContainers);\r\n\r\n                setUserImages(imagesArraySet)\r\n            } else {\r\n                // doc.data() will be undefined in this case\r\n            }\r\n        }).catch((error) => {\r\n            console.log(\"Error getting document:\", error);\r\n        });\r\n    }, []);\r\n\r\n    const handleAboutYouChange = (e) => {\r\n        setAboutYou(e.target.value);\r\n    }\r\n    const handleAboutYou = (e) => {\r\n        if (user.aboutYou !== aboutYou) {\r\n\r\n            userRef.update({ aboutYou: e.target.value })\r\n                .then(() => {\r\n                    console.log('Updated successfully');\r\n                    dispatch({\r\n                        type: 'userChangedAboutYou',\r\n                        payload: e.target.value\r\n                    });\r\n\r\n                })\r\n                .catch(error => {\r\n                    console.log('Error updating', error);\r\n                })\r\n        }\r\n    }\r\n\r\n    const handlePassionsChange = e => {\r\n        setPassions(e.target.value);\r\n    }\r\n\r\n    const handlePassions = (e) => {\r\n        let value = passions.split(', ');\r\n        if (user.passions.join(', ') !== value) {\r\n            userRef.update({ passions: value })\r\n                .then(() => {\r\n                    console.log('Updated successfully')\r\n                    dispatch({\r\n                        type: 'userChangedPassions',\r\n                        payload: value\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    console.log('Error updating', error);\r\n                })\r\n        }\r\n    }\r\n\r\n    const handleGenderChange = e => {\r\n        setGender(e.target.value);\r\n        userRef.update({ gender: e.target.value })\r\n            .then(() => {\r\n                console.log('updated successfully');\r\n                dispatch({\r\n                    type: 'userChangedGender',\r\n                    payload: e.target.value\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log('Error updating', error);\r\n            })\r\n    }\r\n\r\n    const handleOrientationChange = e => {\r\n        setOrientation(e.target.value);\r\n        userRef.update({ sexualOrientation: e.target.value })\r\n            .then(() => {\r\n                console.log('updated successfully');\r\n                dispatch({\r\n                    type: 'userChangedOrientation',\r\n                    payload: e.target.value\r\n                })\r\n            })\r\n            .catch(error => {\r\n                console.log('Error updating', error);\r\n            })\r\n\r\n    }\r\n\r\n    const handleLivingInChange = e => {\r\n        setLivingIn(e.target.value);\r\n        userRef.update({ country: `${region} ${e.target.value}` })\r\n            .then(() => {\r\n                console.log('updated successfully');\r\n                dispatch({\r\n                    type: 'userChangedLivingIn',\r\n                    payload: `${region} ${e.target.value}`\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log('Error updating', error);\r\n            })\r\n    }\r\n    const handleRegion = (e) => {\r\n        setRegion(e.target.value);\r\n    }\r\n\r\n    const handleJobTitleChange = (e) => {\r\n        setJobTitle(e.target.value);\r\n    }\r\n\r\n    const handleJobTitle = (e) => {\r\n        if (user.jobTitle !== e.target.value) {\r\n            userRef.update({ jobTitle: e.target.value })\r\n                .then(() => {\r\n                    console.log('Updated successfully');\r\n                    dispatch({\r\n                        type: 'userChangedJobTitle',\r\n                        payload: e.target.value\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    console.log('Error updating', error);\r\n                })\r\n        }\r\n    }\r\n\r\n    const handleCompanyChange = (e) => {\r\n        setCompany(e.target.value);\r\n    }\r\n    const handleCompany = (e) => {\r\n        if (user.company !== e.target.value) {\r\n            userRef.update({ company: e.target.value })\r\n                .then(() => {\r\n                    console.log('Updated successfully');\r\n                    dispatch({\r\n                        type: 'userChangedCompany',\r\n                        payload: e.target.value\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    console.log('Error updating', error);\r\n                })\r\n        }\r\n    }\r\n    const handleCollegeOrUniChange = (e) => {\r\n        setCollegeOrUni(e.target.value);\r\n    }\r\n    const handleCollegeOrUni = (e) => {\r\n        if (user.collageOrUni !== e.target.value) {\r\n            userRef.update({ collageOrUni: e.target.value })\r\n                .then(() => {\r\n                    console.log('Updated successfully');\r\n                    dispatch({\r\n                        type: 'userChangedCollegeOrUni',\r\n                        payload: e.target.value\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    console.log('Error updating', error);\r\n                })\r\n        }\r\n    }\r\n\r\n    const updateImages = (imagesArr) => {\r\n        let userRef = db.collection('users').doc(`${user.uid}`);\r\n        return userRef.update({\r\n            images: imagesArr,\r\n        }).then(() => {\r\n            console.log(\"Document successfully updated!\");\r\n        }).catch((error) => {\r\n            console.error(\"Error updating document: \", error);\r\n        });\r\n    }\r\n\r\n    const replaceImgUrl = (index, url) => {\r\n        const replacedImageUrls = [...userImages];\r\n        replacedImageUrls[index] = url;\r\n        setUserImages(replacedImageUrls);\r\n        dispatch({\r\n            type: 'userChangedProfilePic',\r\n            payload: replacedImageUrls,\r\n        })\r\n        return replacedImageUrls;\r\n    }\r\n\r\n    const setImagesArrLengthAndFill = (imagesArr, maxSize) => {\r\n        let resultArr = [...imagesArr]\r\n        resultArr.length = maxSize;\r\n        if (imagesArr.length < maxSize) {\r\n            resultArr.fill('', imagesArr.length);\r\n        }\r\n        return resultArr;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <form noValidate autoComplete=\"off\">\r\n                <Grid\r\n                    container\r\n                    className={classes.root}\r\n                    direction='column'\r\n                >\r\n                    <Grid item>\r\n                        <Paper elevation={0} className={classes.paper}>\r\n                            <Grid container direction='column'>\r\n                                <Grid item className={classes.item}>\r\n                                    <Typography variant='h4'>Upload your images</Typography>\r\n                                </Grid>\r\n                                <Grid\r\n                                    container\r\n                                    justify='center'\r\n                                    wrap='wrap'\r\n                                    style={{ margin: '30px 0', padding: '20px' }}\r\n                                >\r\n                                    {userImages.map((container, i) => {\r\n                                        return (\r\n                                            <Grid xs={'auto'} item>\r\n                                                <ImageUploaderContainer id={i} key={i} userId={user.uid} replaceImgUrl={replaceImgUrl} updateImages={updateImages} imgUrl={userImages[i] || ''} />\r\n                                            </Grid>\r\n                                        )\r\n                                    })}\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Paper elevation={0} className={classes.paper}>\r\n                            <Grid\r\n                                container\r\n                                direction='column'\r\n                                alignItems='center'\r\n                            >\r\n                                <Grid item className={classes.item}>\r\n                                    <Typography variant='h4'>About you</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={'auto'} style={{ width: '80%', marginBottom: '30px' }}>\r\n                                    <CssTextField\r\n                                        id=\"outlined-multiline-flexible\"\r\n                                        label=\"About you\"\r\n                                        multiline\r\n                                        rows={4}\r\n                                        rowsMax={4}\r\n                                        fullWidth\r\n                                        value={aboutYou}\r\n                                        onChange={handleAboutYouChange}\r\n                                        onBlur={handleAboutYou}\r\n                                        variant=\"outlined\"\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Paper elevation={0} className={classes.paper}>\r\n                            <Grid\r\n                                container\r\n                                direction='column'\r\n                                alignItems='center'\r\n                            >\r\n                                <Grid item className={classes.item}>\r\n                                    <Typography variant='h4'>Passions</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={'auto'} style={{ width: '80%', marginBottom: '30px' }}>\r\n                                    <CssTextField\r\n                                        id=\"outlined-multiline-flexible\"\r\n                                        label=\"Passions\"\r\n                                        multiline\r\n                                        rows={4}\r\n                                        rowsMax={4}\r\n                                        fullWidth\r\n                                        value={passions}\r\n                                        onChange={handlePassionsChange}\r\n                                        onBlur={handlePassions}\r\n                                        variant=\"outlined\"\r\n                                        placeholder='Separate them by \", \"'\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Paper elevation={0} className={classes.paper}>\r\n                            <Grid\r\n                                container\r\n                                direction='column'\r\n                                alignItems='center'\r\n                            >\r\n                                <Grid item className={classes.item}>\r\n                                    <Typography variant='h4'>Gender:</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={'auto'} style={{ justifyContent: 'center' }}>\r\n                                    <RadioGroup style={{ margin: '0 auto' }} row aria-flowto='right' aria-label=\"gender\" name=\"gender1\" value={gender} onChange={handleGenderChange}>\r\n                                        <FormControlLabel className={classes.radio} value=\"female\" control={<Radio color='secondary' />} label=\"Female\" />\r\n                                        <FormControlLabel value=\"male\" control={<Radio color='primary' />} label=\"Male\" />\r\n                                        <FormControlLabel value=\"other\" control={<Radio color='default' />} label=\"Other\" />\r\n                                    </RadioGroup>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Paper elevation={0} className={classes.paper}>\r\n                            <Grid\r\n                                container\r\n                                direction='column'\r\n                                alignItems='center'\r\n                            >\r\n                                <Grid item className={classes.item}>\r\n                                    <Typography variant='h4'>Sexual orientation:</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={'auto'} className={classes.item}>\r\n                                    <FormControl className={classes.formControl}>\r\n                                        <Select\r\n                                            variant='standard'\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id='sexualOrientation-select'\r\n                                            value={orientation}\r\n                                            onChange={handleOrientationChange}\r\n                                        >\r\n                                            <MenuItem value={'Straight'}>Straight</MenuItem>\r\n                                            <MenuItem value={'Gay'}>Gay</MenuItem>\r\n                                            <MenuItem value={'Lesbian'}>Lesbian</MenuItem>\r\n                                            <MenuItem value={'Bisexual'}>Bisexual</MenuItem>\r\n                                            <MenuItem value={'Asexual'}>Asexual</MenuItem>\r\n                                            <MenuItem value={'Demisexual'}>Demisexual</MenuItem>\r\n                                            <MenuItem value={'Queer'}>Queer</MenuItem>\r\n                                            <MenuItem value={'Questioning'}>Questioning</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Paper elevation={0} className={classes.paper}>\r\n                            <Grid\r\n                                container\r\n                                direction='column'\r\n                                alignItems='center'\r\n                            >\r\n                                <Grid item className={classes.item}>\r\n                                    <Typography variant='h4'>Living in:</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={'auto'} className={classes.item}>\r\n                                    <FormControl className={classes.formControl}>\r\n                                        <InputLabel style={{ color: 'white' }}>Region</InputLabel>\r\n                                        <Select\r\n                                            variant='standard'\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id='sexualOrientation-select'\r\n                                            value={region}\r\n                                            onChange={handleRegion}\r\n                                        >\r\n                                            <MenuItem value={'africa'}>Africa</MenuItem>\r\n                                            <MenuItem value={'americas'}>Americas</MenuItem>\r\n                                            <MenuItem value={'asia'}>Asia</MenuItem>\r\n                                            <MenuItem value={'europe'}>Europe</MenuItem>\r\n                                            <MenuItem value={'oceania'}>Oceania</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                                <Grid item xs={'auto'} className={classes.item}>\r\n                                    <FormControl className={classes.formControl}>\r\n                                        <InputLabel style={{ color: 'white' }} disabled>Country</InputLabel>\r\n                                        <Select\r\n                                            disabled={!region}\r\n                                            variant='standard'\r\n                                            labelId=\"demo-simple-select-label\"\r\n                                            id='country'\r\n                                            value={livingIn}\r\n                                            onChange={handleLivingInChange}\r\n                                        >\r\n                                            {allCountriesInARegion.map(country => <MenuItem key={country.alpha2Code} value={country.name}>{country.name}</MenuItem>)}\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Paper elevation={0} className={classes.paper}>\r\n                            <Grid\r\n                                container\r\n                                direction='column'\r\n                                alignItems='center'\r\n                            >\r\n                                <Grid item className={classes.item}>\r\n                                    <Typography variant='h4'>Job title:</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={'auto'} style={{ width: '80%', marginBottom: '30px' }}>\r\n                                    <CssTextField id=\"standard-secondary\" label=\"Job title\"\r\n                                        fullWidth\r\n                                        color=\"secondary\"\r\n                                        value={jobTitle}\r\n                                        onChange={handleJobTitleChange}\r\n                                        onBlur={handleJobTitle}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Paper elevation={0} className={classes.paper}>\r\n                            <Grid\r\n                                container\r\n                                direction='column'\r\n                                alignItems='center'\r\n                            >\r\n                                <Grid item className={classes.item}>\r\n                                    <Typography variant='h4'>Company:</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={'auto'} style={{ width: '80%', marginBottom: '30px' }}>\r\n                                    <CssTextField id=\"standard-secondary\" label=\"Company\"\r\n                                        fullWidth\r\n                                        color=\"secondary\"\r\n                                        value={company}\r\n                                        onChange={handleCompanyChange}\r\n                                        onBlur={handleCompany}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Paper elevation={0} className={classes.paper}>\r\n                            <Grid\r\n                                container\r\n                                direction='column'\r\n                                alignItems='center'\r\n                            >\r\n                                <Grid item className={classes.item}>\r\n                                    <Typography variant='h4'>College/Uni:</Typography>\r\n                                </Grid>\r\n                                <Grid item xs={'auto'} style={{ width: '80%', marginBottom: '30px' }}>\r\n                                    <CssTextField id=\"standard-secondary\" label=\"College/Uni\"\r\n                                        fullWidth\r\n                                        color=\"secondary\"\r\n                                        value={collegeOrUni}\r\n                                        onChange={handleCollegeOrUniChange}\r\n                                        onBlur={handleCollegeOrUni}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React, { useState } from 'react';\r\nimport { CssBaseline, Typography, InputLabel, OutlinedInput, FormControl, Container, TextField, Label, IconButton, InputAdornment, makeStyles, Button } from \"@material-ui/core\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport firebase, { db, auth } from '../../firebase';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport loginUser from './login-register.actions';\r\n\r\nconst defaultProfilePicUrl = 'https://firebasestorage.googleapis.com/v0/b/fir-project-d9b09.appspot.com/o/profilePics%2Fdefault-profile-pic.jpg?alt=media&token=12bd0268-84bd-47ee-9bf7-5ca4269f87d5';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '30ch',\r\n        },\r\n    },\r\n    container: {\r\n        marginTop: '1rem',\r\n        width: 'max-content',\r\n        margin: '0 auto',\r\n        display: 'flex',\r\n        maxWidth: '400px',\r\n    },\r\n    label: {\r\n        lineHeight: '4px',\r\n    },\r\n    googleIcon: {\r\n        width: '1.5rem',\r\n        marginRight: '8px',\r\n    },\r\n}));\r\n\r\nexport default function Register({ setCurrentUser }) {\r\n    const classes = useStyles();\r\n    const [emailInput, setEmailInput] = useState(\"\");\r\n    const [passInput, setPassInput] = useState(\"\");\r\n    const [firstNameInput, setFirstNameInput] = useState(\"\");\r\n    const [lastNameInput, setLastNameInput] = useState(\"\");\r\n    const [ageInput, setAgeInput] = useState(\"\");\r\n    const [isPassVisible, setIsPassVisible] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function changeInput(value, field) {\r\n        switch (field) {\r\n            case 'firstName': setFirstNameInput(value);\r\n                break;\r\n            case 'lastName': setLastNameInput(value);\r\n                break;\r\n            case 'email': setEmailInput(value);\r\n                break;\r\n            case 'password': setPassInput(value);\r\n                break;\r\n            case 'age': setAgeInput(value);\r\n                break;\r\n            default:\r\n        }\r\n    }\r\n\r\n    function register() {\r\n        auth.setPersistence(firebase.auth.Auth.Persistence.LOCAL)\r\n            .then(() => {\r\n                return auth.createUserWithEmailAndPassword(emailInput, passInput)\r\n            })\r\n            .then(() => {\r\n                var user = auth.currentUser;\r\n                let fullName = `${firstNameInput[0]}${firstNameInput.slice(1)} ${lastNameInput[0]}${lastNameInput.slice(1)}`;\r\n                let userInDb = {\r\n                    uid: user.uid,\r\n                    name: fullName,\r\n                    email: emailInput,\r\n                    aboutYou: '',\r\n                    age: ageInput,\r\n                    collageOrUni: '',\r\n                    company: '',\r\n                    country: '',\r\n                    city: '',\r\n                    gender: '',\r\n                    jobTitle: '',\r\n                    images: [defaultProfilePicUrl],\r\n                    mediaProfiles: [],\r\n                    sexualOrientation: '',\r\n                    youtubeSong: '',\r\n                    passions: [],\r\n                    chats: [],\r\n                    isOnline: true,\r\n                    liked: [],\r\n                    disliked: [],\r\n                    matches: []\r\n                }\r\n\r\n                createUserInDb(user.uid, userInDb);\r\n            })\r\n            .catch(error => console.log(error.message))\r\n\r\n        setEmailInput('');\r\n        setFirstNameInput('');\r\n        setLastNameInput('');\r\n        setPassInput('');\r\n        setAgeInput('');\r\n    }\r\n\r\n    const handleClickShowPassword = () => {\r\n        isPassVisible ? setIsPassVisible(false) : setIsPassVisible(true);\r\n        console.log(isPassVisible)\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n\r\n    };\r\n    const createUserInDb = (userId, obj) => {\r\n        db.collection(\"users\").doc(`${userId}`).set(obj)\r\n            .then(() => {\r\n                console.log(\"Document successfully written!\");\r\n                dispatch({ type: 'userLoggedIn', payload: obj });\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Error writing document: \", error);\r\n            });\r\n    }\r\n\r\n    const createUpdateGoogleUserInDb = (userId, obj) => {\r\n        var userRef = db.collection(\"users\").doc(userId);\r\n\r\n        userRef.get().then((doc) => {\r\n            if (!doc.exists) {\r\n                console.log('nqma takyv potrebirel')\r\n                return userRef.set(obj)\r\n                    .then(() => {\r\n                        console.log(\"Document successfully updated! // syzdadoh takyv potrebitel\");\r\n                    })\r\n                    .catch((error) => {\r\n                        console.error(\"Error updating document: \", error);\r\n                    });\r\n            } else {\r\n                console.log('IVA VECHE takyv potrebirel, ne promenqm bazata')\r\n            }\r\n            dispatch({ type: 'userLoggedIn', payload: obj });\r\n        })\r\n            .catch((error) => {\r\n                console.log(\"Error getting document:\", error);\r\n            });\r\n\r\n    }\r\n\r\n\r\n    const signInWithGoogle = () => {\r\n        const provider = new firebase.auth.GoogleAuthProvider();\r\n        auth\r\n            .signInWithPopup(provider)\r\n            .then((res) => {\r\n                console.log('logvane s google ', res);\r\n                console.log('dokato zarejda dali e lognat')\r\n                let userInDb = {\r\n                    uid: res.user.uid,\r\n                    name: res.user.displayName,\r\n                    email: res.user.email,\r\n                    aboutYou: '',\r\n                    age: 18,\r\n                    collageOrUni: '',\r\n                    company: '',\r\n                    country: '',\r\n                    city: '',\r\n                    gender: '',\r\n                    jobTitle: '',\r\n                    images: [res.additionalUserInfo.profile.picture || defaultProfilePicUrl],\r\n                    mediaProfiles: [],\r\n                    sexualOrientation: '',\r\n                    youtubeSong: '',\r\n                    passions: [],\r\n                    chats: [],\r\n                    isOnline: true,\r\n                    liked: [],\r\n                    disliked: [],\r\n                    matches: [],\r\n                }\r\n                createUpdateGoogleUserInDb(res.user.uid, userInDb);\r\n            }).catch((error) => {\r\n                console.log(error.message)\r\n            })\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Container className={classes.container} position=\"relative\" align=\"center\">\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <TextField\r\n                        id=\"firstNameInput\"\r\n                        autoFocus\r\n                        error={firstNameInput.trim().length < 4 && firstNameInput.length !== 0} value={firstNameInput}\r\n                        onChange={(ev) => changeInput(ev.target.value, 'firstName')}\r\n                        label=\"First name\" variant=\"outlined\" />\r\n                    <TextField\r\n                        id=\"lastNameInput\"\r\n                        autoFocus\r\n                        error={lastNameInput.trim().length < 4 && lastNameInput.length !== 0} value={lastNameInput}\r\n                        onChange={(ev) => changeInput(ev.target.value, 'lastName')}\r\n                        label=\"Last name\" variant=\"outlined\" />\r\n                    <TextField\r\n                        id=\"email\"\r\n                        autoFocus\r\n                        type=\"email\"\r\n                        error={emailInput.trim().length < 4 && emailInput.length !== 0} value={emailInput}\r\n                        onChange={(ev) => changeInput(ev.target.value, 'email')}\r\n                        label=\"Email\" variant=\"outlined\" />\r\n                    <FormControl variant=\"outlined\">\r\n                        <InputLabel className=\"label\" htmlFor=\"password\">Password</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"password\"\r\n                            error={passInput.trim().length < 4 && passInput.length !== 0}\r\n                            value={passInput}\r\n                            onChange={(ev) => changeInput(ev.target.value, 'password')}\r\n                            label=\"Password\"\r\n                            variant=\"outlined\"\r\n                            type={isPassVisible ? 'text' : 'password'}\r\n                            autoComplete=\"current-password\"\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        {isPassVisible ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                    <TextField\r\n                        id=\"age\"\r\n                        error={ageInput < 18 && ageInput !== \"\"}\r\n                        value={ageInput}\r\n                        onChange={(ev) => changeInput(ev.target.value, 'age')}\r\n                        label=\"How old are you?\"\r\n                        variant=\"outlined\"\r\n                        type=\"number\"\r\n                    />\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={register}>Register</Button>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={signInWithGoogle}>\r\n                        <img className={classes.googleIcon} src=\"https://img.icons8.com/ios-filled/50/000000/google-logo.png\" alt=\"google icon\" />\r\n                        <span> Continue with Google</span>\r\n                    </Button>\r\n                </form>\r\n            </Container>\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { CssBaseline, Typography, InputLabel, OutlinedInput, FormControl, Container, TextField, Label, IconButton, InputAdornment, makeStyles, Button } from \"@material-ui/core\";\r\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\r\nimport { auth, db } from '../../firebase';\r\nimport firebase from '../../firebase';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n            width: '30ch',\r\n        },\r\n    },\r\n    form: {\r\n        minWidth: '300px',\r\n        maxWidth: '400px',\r\n    },\r\n    container: {\r\n        marginTop: '5rem',\r\n        maxWidth: '500px',\r\n        margin: '0 auto',\r\n        display: 'flex',\r\n    },\r\n    label: {\r\n        lineHeight: '4px',\r\n    },\r\n}));\r\n\r\nexport default function Login() {\r\n    const classes = useStyles();\r\n    const [usernameInput, setUsernameInput] = useState(\"\");\r\n    const [passInput, setPassInput] = useState(\"\");\r\n    const [isPassVisible, setIsPassVisible] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    function changeUsernameInput(ev) {\r\n        setUsernameInput(ev.target.value);\r\n    }\r\n\r\n    function changePasswordInput(ev) {\r\n        setPassInput(ev.target.value);\r\n    }\r\n\r\n    function login() {\r\n\r\n        auth.setPersistence('session')\r\n            .then(() => {\r\n                return auth.signInWithEmailAndPassword(usernameInput, passInput)\r\n            })\r\n            .then((authToken) => {\r\n                db.collection('users').doc(authToken.user.uid).get().then(res => {\r\n                    console.log('=====>',res.data())\r\n                    dispatch({\r\n                      type: 'userLoggedIn',\r\n                      payload: res.data()\r\n                    });\r\n                  })\r\n            })\r\n            .catch(error => console.log(error.message))\r\n\r\n        setUsernameInput('');\r\n        setPassInput('');\r\n    }\r\n\r\n    const handleClickShowPassword = () => {\r\n        isPassVisible ? setIsPassVisible(false) : setIsPassVisible(true);\r\n        console.log(isPassVisible)\r\n    };\r\n\r\n    const handleMouseDownPassword = (event) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Container className={classes.container} position=\"relative\" align=\"center\">\r\n                <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <TextField\r\n                        id=\"username\"\r\n                        fullWidth='true'\r\n                        autoFocus\r\n                        error={usernameInput.trim().length < 4 && usernameInput.length !== 0} value={usernameInput}\r\n                        onChange={(ev) => changeUsernameInput(ev)}\r\n                        label=\"Username\" variant=\"outlined\" />\r\n                    <FormControl variant=\"outlined\">\r\n                        <InputLabel className=\"label\" htmlFor=\"password\">Password</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"password\"\r\n                            fullWidth='true'\r\n                            error={passInput.trim().length < 4 && passInput.length !== 0}\r\n                            value={passInput}\r\n                            onChange={(ev) => changePasswordInput(ev)}\r\n                            label=\"Password\"\r\n                            variant=\"outlined\"\r\n                            type={isPassVisible ? 'text' : 'password'}\r\n                            autoComplete=\"current-password\"\r\n                            endAdornment={\r\n                                <InputAdornment position=\"end\">\r\n                                    <IconButton\r\n                                        aria-label=\"toggle password visibility\"\r\n                                        onClick={handleClickShowPassword}\r\n                                        onMouseDown={handleMouseDownPassword}\r\n                                        edge=\"end\"\r\n                                    >\r\n                                        {isPassVisible ? <Visibility /> : <VisibilityOff />}\r\n                                    </IconButton>\r\n                                </InputAdornment>\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                    <Button onClick={login} variant=\"contained\" color=\"primary\">Login</Button>\r\n                </form>\r\n            </Container>\r\n        </>\r\n    )\r\n}","import { useEffect, useState } from \"react\";\r\nimport { useParams } from 'react-router-dom';\r\nimport  Avatar from '@material-ui/core/Avatar';\r\nimport { CssBaseline, makeStyles, Grid, GridList, GridListTile, Typography  } from '@material-ui/core';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\n// import SimpleImageSlider from \"react-simple-image-slider\";\r\nimport FbImageLibrary from 'react-fb-image-grid';\r\nimport { useSelector } from 'react-redux';\r\nimport './ChosenMatch.module.css'\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        width: '40vw',\r\n        alignItems: 'center',\r\n        textAlign: 'center',\r\n        color: 'white',\r\n    },\r\n    name: {\r\n        marginBottom: '3rem',\r\n    },\r\n    textField: {\r\n        fontSize: '1.2rem',\r\n        color: 'rgb(225,225,225)',\r\n        margin: '0 auto',\r\n        width: '100%',\r\n        padding: '0 5rem',\r\n        textAlign: 'center',\r\n    },\r\n});\r\n\r\n    \r\nexport default function ChosenMatch({ chosenProfileId }) {\r\n    console.log('chosenProfileId', chosenProfileId);\r\n    const styles = useStyles();\r\n    const users = useSelector(state => state.allUsers);\r\n    const [chosenUser, setChosenUser] = useState(null);\r\n    const [images, setImages] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const focusedUser = users.find(user => user.uid === chosenProfileId);\r\n        setChosenUser(focusedUser);\r\n        console.log('chosenUser from useEffect: ', chosenUser);\r\n        console.log('chosenProfileId from useEffect: ', chosenProfileId);\r\n    }, [users])\r\n\r\n    useEffect(() => {\r\n        const imagesToDisplay = chosenUser?.images.filter(image => image !== '');\r\n        setImages(imagesToDisplay);\r\n    }, [chosenUser])\r\n    \r\n    console.log('chosenUser', chosenUser);\r\n    console.log('images', images);\r\n    return (\r\n        <CssBaseline>\r\n            <div className={styles.container}>\r\n                <h2 className={styles.name}>{chosenUser?.name}</h2>\r\n                <FbImageLibrary\r\n                images={images}\r\n                width={300}\r\n                // countFrom={1}\r\n                renderOverlay={() => <div style={{fontSize: '2rem'}}>Show</div>}\r\n                overlayBackgroundColor=\"tomato\"\r\n                />\r\n                <h3>About me</h3>\r\n                <div className={styles.textField}>\r\n                    {chosenUser?.aboutYou}\r\n                </div>\r\n                <hr />\r\n                <h3>Passions</h3>\r\n                <div className={styles.textField}>\r\n                    {chosenUser?.passions.join(', ')}\r\n                </div>\r\n                <hr />\r\n                <h3>Gender</h3>\r\n                <div className={styles.textField}>\r\n                    {chosenUser?.gender}\r\n                </div>\r\n                <hr />\r\n                <h3>Sexual orientation</h3>\r\n                <div className={styles.textField}>\r\n                    {chosenUser?.sexualOrientation}\r\n                </div>\r\n                <hr />\r\n                <h3>Living in</h3>\r\n                <div className={styles.textField}>\r\n                    {chosenUser?.country}\r\n                </div>\r\n                <hr />\r\n                <h3>Job title</h3>\r\n                <div className={styles.textField}>\r\n                    {chosenUser?.jobTitle}\r\n                </div>\r\n                <hr />\r\n                <h3>Company</h3>\r\n                <div className={styles.textField}>\r\n                    {chosenUser?.company}\r\n                </div>\r\n                <hr />\r\n                <h3>College</h3>\r\n                <div className={styles.textField}>\r\n                    {chosenUser?.collageOrUni}\r\n                </div>\r\n            </div>\r\n        </CssBaseline>\r\n    )}","import Grid from '@material-ui/core/Grid';\r\nimport { Link } from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport styles from './Matches.module.css';\r\nimport { db } from '../../firebase';\r\nimport ChosenMatch from '../chosenMatch/ChosenMatch';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    flexColumn: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width: '100%',\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    },\r\n    title: {\r\n        fontSize: '2rem',\r\n        width: 'max-content',\r\n    },\r\n    container: {\r\n        width: '60%',\r\n        position: 'relative',\r\n        display: 'flex',\r\n        // padding: theme.spacing(0, 10, 2),\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        marginTop: '1rem',\r\n    },\r\n    item: {\r\n        margin: `${theme.spacing(2)}px`,\r\n        '&:hover':  {boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)'},\r\n    },\r\n    root: {\r\n        // maxWidth: 250,\r\n        position: 'relative',\r\n        backgroundColor: 'rgba(255, 255, 255, 0.4)',\r\n        width: 250,\r\n        height: 350,\r\n        margin: '13px',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        justifyContent: 'space-between',\r\n    },\r\n    expanded: {\r\n        height: 'auto',\r\n        position: 'fixed',\r\n        top: '50px',\r\n        left: '5%',\r\n        zIndex: 2,\r\n    },\r\n    media: {\r\n        height: 240,\r\n    },\r\n    colorBlack: {\r\n        color: 'black',\r\n    },\r\n    btnContainer: {\r\n        marginBottom: '2rem',\r\n    },\r\n}));\r\n\r\nexport default function Matches({ getChosenMatchId }) {\r\n    const classes = useStyles();\r\n    const [moreDetailsCardKey, setMoreDetailsCardKey] = useState(-1);\r\n    // const [matches, setMatches] = useState([]);\r\n    const currentUser = useSelector(state => state.currentUser);\r\n    const [matches, setMatches] = useState([]);\r\n    const allUsers = useSelector(state => state.allUsers);\r\n    const matchesIds = useSelector(state => state.currentUser.matches);\r\n    const defaultProfilePic = 'https://t4.ftcdn.net/jpg/00/64/67/63/360_F_64676383_LdbmhiNM6Ypzb3FM4PPuFP9rHe7ri8Ju.jpg';\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        const allMatches = allUsers.filter(user => currentUser.matches.includes(user.uid));\r\n        setMatches(allMatches);\r\n    }, [currentUser])\r\n\r\n    useEffect(() => {\r\n        matches?.length > 0 && setIsLoading(false);\r\n    }, [matches])\r\n\r\n    const manageCards = (uid) => {\r\n        moreDetailsCardKey === uid ? setMoreDetailsCardKey('') : setMoreDetailsCardKey(uid);\r\n    }\r\n\r\n    const showProfile = (chosenId) => {\r\n        getChosenMatchId(chosenId);\r\n    }\r\n\r\n    const dislikeUser = (userId) => {\r\n        console.log(userId)\r\n        const currUserMatchesIds = currentUser.matches.filter(matchId => matchId !== userId);\r\n        const currUserLikedProfilesIds = currentUser.liked.filter(likedId => likedId !== userId);\r\n        const removedUser = allUsers.find(user => user.uid === userId)\r\n        const removedUserMatches = removedUser.matches.filter(matchId => matchId !== currentUser.uid);\r\n        console.log('currUserMatches', currUserMatchesIds);\r\n        console.log('currUserLikedProfiles', currUserLikedProfilesIds);\r\n        console.log('currUserLikedProfiles sus removedUser: ', currentUser.liked);\r\n        console.log('removedUser', removedUser);\r\n        console.log('removedUserMatches', removedUserMatches);\r\n\r\n        db.collection('users').doc(currentUser.uid).update({\r\n            matches: [...currUserMatchesIds],\r\n            liked: [...currUserLikedProfilesIds],\r\n        })\r\n        .then(() => {\r\n            dispatch({type: 'userChangedLiked', payload: userId});\r\n            dispatch({type: 'userChangedMatches', payload: userId});\r\n        })\r\n        .catch(err => console.log('Error after updating db for currentUser: ', err))\r\n\r\n        db.collection('users').doc(userId).update({\r\n            matches: [...removedUserMatches],\r\n        })\r\n        .then(() => {\r\n            let updatedUsers = [...allUsers];\r\n            updatedUsers = updatedUsers.map(user => {\r\n                if(user.uid === userId) {\r\n                    user.matches = removedUserMatches;\r\n                }\r\n                return user;\r\n            });\r\n            dispatch({type: 'getAllUsers', payload: updatedUsers});\r\n            // setMatches(prev => prev.filter(user => user.uid !== userId));\r\n            const newMatches = matches.filter(user => user.uid !== userId);\r\n            setMatches(newMatches);\r\n        })\r\n        .catch(err => console.log('Error after updating db for currentUser: ', err))\r\n        deleteChatRoom(userId, currentUser.uid)\r\n        // let currentMatches = allUsers.filter(user => currUserMatchesIds.includes(user.uid));\r\n        // setMatches(currentMatches);\r\n    }\r\n\r\n    // To be moved to a Service file:\r\n    function deleteChatRoom(selectedUserId, currentUserId) {\r\n        let chatRoomDocId = selectedUserId > currentUserId ? `${currentUserId}_${selectedUserId}` : `${selectedUserId}_${currentUserId}`;\r\n        db.collection('chatRooms').doc(chatRoomDocId).delete()\r\n            .then(() => console.log(\"Successfully deleted the chatRoom for users: \", currentUserId, selectedUserId))\r\n            .catch((err) => console.log(\"Error on chatRoom deleting: \", err))\r\n    }\r\n\r\n    if (isLoading) {\r\n        return <h2>THE PAGE IS LOADING...</h2>;\r\n    }\r\n\r\n    return (\r\n        <div className={classes.flexColumn}>\r\n        <Typography className={classes.title}>Your matches</Typography>\r\n        <Grid\r\n            container\r\n            className={classes.container}\r\n        >\r\n        {matches.length > 0 && matches.map((user) =>\r\n            <Card elevation={20} className={moreDetailsCardKey === user.uid ? `${classes.root} ${classes.expanded}` : classes.root} key={user.uid} onClick={() => showProfile(user.uid)}>\r\n                <CardActionArea component={Link} to={'/matches/' + user.uid}>\r\n                    <CardMedia\r\n                    className={classes.media}\r\n                    image={user.images && user.images[0] || defaultProfilePic}\r\n                    title={user.name}\r\n                    />\r\n                    <CardContent>\r\n                    <Typography className={classes.colorBlack} gutterBottom variant=\"h5\" component=\"h2\">\r\n                        {user.name} - {user.age}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {user.aboutYou ? user.aboutYou : `From ${user.country?.split(' ')[1]}`}\r\n                    </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                <CardActions className={classes.btnContainer}>\r\n                    <Button size=\"small\" color=\"primary\">\r\n                    Chat\r\n                    </Button>\r\n                    <Button size=\"small\" color=\"primary\" onClick={() => dislikeUser(user.uid)}>\r\n                    Dislike\r\n                    </Button>\r\n                </CardActions>\r\n                    <Button className={styles.btnStyle} onClick={() => manageCards(user.uid)}>{moreDetailsCardKey === user.uid ? 'Show less' : 'Show more'}</Button>\r\n            </Card>\r\n        )}\r\n        \r\n        </Grid>\r\n        </div>\r\n    );\r\n}\r\n","import { useEffect, useState } from \"react\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport chatClasses from './Chat.module.css';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    head: {\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n        margin: theme.spacing(1),\r\n    },\r\n    timestamp: {\r\n        color: 'gray',\r\n        fontSize: '8px',\r\n    },\r\n    active : {\r\n        background: 'rgba(255, 255, 255, 0.3)',\r\n        borderRadius: '2rem 0 0 2rem',\r\n    },\r\n    missed : {\r\n        background: 'red',\r\n    }\r\n}));\r\n\r\nexport default function ChatHead({ selectTargetChat,  chat, isActive  }) {\r\n    const styles = useStyles();\r\n    const allUsers = useSelector(state => state.allUsers);\r\n    const currentUserId = useSelector(state => state.currentUser.uid)\r\n    const targetUserId  = chat.id.split('_').filter(id => id !== currentUserId).join('');\r\n    const targetUser = allUsers.find(user => user.uid === targetUserId);\r\n\r\n\r\n    const [currentChat, setCurrentChat] = useState(chat);\r\n    const [isTyping, setIsTyping] = useState(false);\r\n\r\n    const [hasMissedMessages, setHasMissedMessages] = useState(false);\r\n\r\n\r\n\r\n    // Shte se podkara kogato chat ot propsa se promeni!!!\r\n    useEffect(() => {\r\n        if (chat.messages.length > 0) {\r\n            let lastMessageSender = chat.messages[chat.messages.length - 1].sender;\r\n            if(currentChat.messages.length !== chat.messages.length && lastMessageSender !== currentUserId && !isActive) {\r\n                setHasMissedMessages(true);\r\n                setCurrentChat(chat);\r\n            }\r\n            if(isActive) {\r\n                setHasMissedMessages(false);\r\n            }\r\n        }\r\n        // if(chat.isTyping.includes(targetUserId)) {\r\n        //     setIsTyping(true)\r\n        // } else {\r\n        //     setIsTyping(false)\r\n        // }\r\n    }, [chat, isActive, currentChat.messages.length])\r\n    \r\n\r\n    const handleChatOnClick = () => {\r\n        selectTargetChat(chat.id);\r\n    }\r\n\r\n    return (\r\n        <span key={targetUser.id} style={hasMissedMessages ? {border: '2px solid red'} : {}} className={isActive ? styles['active'] : ''} onClick={e => handleChatOnClick(e)}>\r\n            <Avatar className={styles.head} alt={targetUser.name} src={targetUser.images[0]} />\r\n            {targetUser.name}\r\n        </span>\r\n    )\r\n}","import firebase, { db } from '../../firebase';\r\n\r\nexport const sentMessage = (chatId, userId, message) => {\r\n    const targetChatRef = db.collection('chatRooms').doc(chatId);\r\n    targetChatRef.update({\r\n            messages: firebase.firestore.FieldValue.arrayUnion({ message: message, sender: userId, createdAt: Date.now() }),\r\n            lastMessageTimestamp: Date.now(),\r\n            // timeStamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n}\r\n\r\n// export const updateIsTyping \r\n","import { useEffect, useState } from \"react\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport chatClasses from './Chat.module.css';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    head: {\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n        margin: theme.spacing(1),\r\n    },\r\n    timestamp: {\r\n        color: 'gray',\r\n        fontSize: '8px',\r\n    }\r\n}));\r\n\r\nexport default function ChatHead({ message }) {\r\n    const styles = useStyles();\r\n    const allUsers = useSelector(state => state.allUsers);\r\n    const user = useSelector(state => state.currentUser);\r\n    const messageStyle = message.sender === user.uid ? 'sent' : 'received';\r\n    const userImage = allUsers.find(user => user.uid === message.sender)?.images[0];\r\n\r\n    return (\r\n        <div className={[`${chatClasses.message} ${chatClasses[messageStyle]}`]}>\r\n            <Avatar className={styles.head} alt={message.sender} src={userImage} />\r\n            <p>{message.message}</p>\r\n            <span>{new Date(message.createdAt).toDateString()}</span>\r\n        </div>\r\n    )\r\n}","import chatClasses from './Chat.module.css';\r\nimport { useState, useEffect, useMemo, useRef } from \"react\";\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { CssBaseline, makeStyles } from '@material-ui/core';\r\nimport firebase, { db } from '../../firebase';\r\nimport { useSelector } from 'react-redux';\r\nimport ChatHead from './chatHead';\r\nimport { sentMessage } from './chatService';\r\nimport Message from './Message';\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    head: {\r\n        width: theme.spacing(4),\r\n        height: theme.spacing(4),\r\n        margin: theme.spacing(1),\r\n    },\r\n    timestamp: {\r\n        color: 'gray',\r\n        fontSize: '8px',\r\n    }\r\n}));\r\n\r\nexport default function Chat() {\r\n    const styles = useStyles();\r\n    const user = useSelector(state => state.currentUser);\r\n\r\n    const [formValue, setFormValue] = useState('');\r\n    const [allChats, setAllChats] = useState([]);\r\n    const [targetChatId, setTargetChatId] = useState('');\r\n    const dummyDiv = useRef();\r\n    // const [lastChatChangedId, setLastChatChangedId] = useState('');\r\n    // const [updatedChats, setUpdatedChats] = useState([]);\r\n\r\n    const chatRoomsRef = db.collection('chatRooms').where('users', 'array-contains', user.uid);\r\n\r\n    // Fetch all chat rooms\r\n    useEffect(() => {\r\n        /* gledame za promeni v qnkoi ot tezi documenti */\r\n        chatRoomsRef.onSnapshot(snapShot => {\r\n            // console.log('snapshot=> ', snapShot)\r\n            const tempAllChats = []\r\n            snapShot.forEach(doc => {\r\n                const data = doc.data();\r\n                let chat = { ...data, id: doc.id }\r\n                \r\n                // tempAllChats.push(chat);\r\n                chat.messages.length !== 0 ? tempAllChats.unshift(chat) : tempAllChats.push(chat);\r\n            })\r\n\r\n            const sortedByTimeChats = tempAllChats.sort((a, b) => b.lastMessageTimestamp - a.lastMessageTimestamp);\r\n            setAllChats(sortedByTimeChats)\r\n\r\n            // if(sortedByTimeChats.length > 0) {\r\n            //     setTargetChatId(sortedByTimeChats[0].id)\r\n            // }\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        dummyDiv.current.scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"nearest\",\r\n            inline: \"start\"\r\n        });\r\n    }, [allChats, dummyDiv, targetChatId])\r\n\r\n\r\n    const sendMessage = async (e) => {\r\n        e.preventDefault();\r\n\r\n        await sentMessage(targetChatId, user.uid, formValue);\r\n        console.log('izpratih ei tui: ', formValue, 'v chata: ', targetChatId, 'ot: ', user.uid);\r\n        setFormValue('');\r\n\r\n        // scroll to bottom -> useRef()\r\n        dummyDiv.current.scrollIntoView({\r\n            behavior: \"smooth\",\r\n            block: \"nearest\",\r\n            inline: \"start\"\r\n        });\r\n    }\r\n\r\n    const selectTargetChat = (id) => {\r\n        setTargetChatId(id);\r\n    }\r\n\r\n    const currentChat = useMemo(() => {\r\n        const id = allChats.findIndex(chat => chat.id === targetChatId);\r\n        return allChats[id];\r\n    }, [targetChatId, allChats])\r\n\r\n    // console.log('currentChat =>>> ', currentChat)\r\n    return (\r\n        <CssBaseline>\r\n            <div className={chatClasses.chatContainer}>\r\n                <div className={chatClasses.profilesInChat}>\r\n                    <div className={chatClasses.innerDivChat}>\r\n                        {\r\n                            allChats.map(chat => {\r\n                                return (<ChatHead \r\n                                    chat={chat}\r\n                                    isActive={targetChatId === chat.id}\r\n                                    selectTargetChat={selectTargetChat}\r\n                                    key={chat.id}\r\n                                    />)\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n                <main className={chatClasses.chat}>\r\n                    <div className={chatClasses.messageContainer}>\r\n\r\n                        {\r\n                            currentChat &&\r\n                            currentChat.messages.map(message => {\r\n                                return <Message message={message} key={message.createdAt} />\r\n                            })\r\n                        }\r\n                        <div ref={dummyDiv} />\r\n                    </div>\r\n                    <form className={chatClasses.chatForm} onSubmit={sendMessage}>\r\n                        <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\" />\r\n                        <button type=\"submit\" disabled={!currentChat || !formValue}>💕</button>\r\n                    </form>\r\n                </main>\r\n            </div>\r\n        </CssBaseline>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport { Link, Route, Switch, Redirect } from 'react-router-dom';\r\nimport MenuAppBar from '../menuAppBar/MenuAppBar';\r\nimport HomePage from '../homePage/HomePage';\r\nimport Profile from '../profile/Profile';\r\nimport Register from \"../login-register/Register\";\r\nimport Login from '../login-register/Login';\r\nimport ChosenMatch from '../chosenMatch/ChosenMatch';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Matches from '../matches/Matches';\r\nimport InsertCommentIcon from '@material-ui/icons/InsertComment';\r\nimport Chat from '../chat/Chat';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport { users } from '../matches/Matches';\r\nimport firebase, { auth, db } from '../../firebase';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CodeSharp } from '@material-ui/icons';\r\n\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [isChatOpened, setIsChatOpened] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  const showChat = () => {\r\n    setIsChatOpened(!isChatOpened);\r\n  }\r\n\r\n  const user = useSelector(state => state.currentUser);\r\n  const [chosenProfileId, setChosenProfileId] = useState(null);\r\n\r\n  console.log('Kolko puti se rendnah?!?!?');\r\n\r\n  //is a user still logged in\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(function (user) {\r\n      if (user) {\r\n        db.collection('users').doc(user.uid).get().then(res => {\r\n          dispatch({\r\n            type: 'userLoggedIn',\r\n            payload: res.data()\r\n          });\r\n          setIsLoading(false);\r\n        })\r\n        console.log('ima lognat ')\r\n      } else {\r\n        dispatch({\r\n          type: 'userLoggedOut'\r\n        });\r\n        setIsLoading(false);\r\n        console.log('nqma lognat uj...')\r\n      }\r\n    });\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    db.collection('users').onSnapshot(res => {\r\n      let users = [];\r\n      res.forEach(element => {\r\n        users.push(element.data());\r\n      });\r\n      console.log('Tuk otnovo setvame users ot App.jsx: ', users)\r\n      dispatch({\r\n        type: 'getAllUsers',\r\n        payload: users,\r\n      });\r\n    })\r\n  }, [])\r\n\r\n  const getChosenMatchId = (id) => {\r\n    setChosenProfileId(id);\r\n  }\r\n\r\n  if (isLoading) {\r\n    return <div style={{ margin: 'calc(50vh - 100px) auto' }}>\r\n      <CircularProgress size={100} />\r\n    </div>\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <CssBaseline />\r\n      <header>\r\n        <MenuAppBar user={user} />\r\n      </header>\r\n      <main className=\"App\">\r\n        <Switch>\r\n          <Route exact path='/'>\r\n            {user.uid ?\r\n              <>\r\n                <HomePage />\r\n              </> : <Redirect to=\"/login\" />}\r\n          </Route>\r\n          <Route exact path='/login'>\r\n            {user.uid ?\r\n              <div>\r\n                <Redirect to=\"/\" />\r\n              </div>\r\n              :\r\n              <Login />\r\n            }\r\n          </Route>\r\n          <Route exact path='/register'>\r\n            {user.uid ?\r\n              <div>\r\n                <Redirect to=\"/\" />\r\n              </div>\r\n              :\r\n              <Register />\r\n            }\r\n          </Route>\r\n          {user.uid ?\r\n            <Route exact path='/matches'>\r\n              <Matches getChosenMatchId={(id) => getChosenMatchId(id)} />\r\n              {/* <Route exact path='/chosenMatch'>\r\n              <ChosenMatch user={user}/>\r\n            </Route> */}\r\n              {/* <ChosenMatch user={user}/> */}\r\n            </Route>\r\n            :\r\n            <Register />\r\n          }\r\n          {user.uid ?\r\n            chosenProfileId && <Route path=\"/matches/:id\">\r\n              <ChosenMatch chosenProfileId={chosenProfileId} />\r\n            </Route>\r\n            :\r\n            <Register />\r\n          }\r\n          <Route exact path='/profile'>\r\n            {user.uid ? <Profile /> : <Redirect to='/profile' />}\r\n          </Route>\r\n          <Route path='*'>\r\n            <Redirect to='/' />\r\n          </Route>\r\n        </Switch>\r\n\r\n      </main>\r\n      {user.uid && isChatOpened && <Chat />}\r\n      {user.uid && <InsertCommentIcon fontSize='large' className='chatIcon' onClick={showChat} />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const initialState = {\r\n    uid: '',\r\n    name: '',\r\n    email: '',\r\n    aboutYou: '',\r\n    age: null,\r\n    collageOrUni: '',\r\n    company: '',\r\n    country: '',\r\n    city: '',\r\n    gender: '',\r\n    jobTitle: '',\r\n    images: [],\r\n    mediaProfiles: [],\r\n    sexualOrientation: '',\r\n    youtubeSong: '',\r\n    passions: [],\r\n    chats: [],\r\n    isOnline: false,\r\n    liked: [],\r\n    disliked: [],\r\n    matches: []\r\n}\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type){\r\n        // nice!!!\r\n        case 'userLoggedIn':\r\n            return {\r\n                ...action.payload,\r\n            }\r\n        case 'userLoggedOut':\r\n            return initialState;\r\n        case 'userChangedProfilePic':\r\n            return {\r\n                ...state,\r\n                images: action.payload,\r\n            }\r\n        case 'userChangedAboutYou':\r\n            return {\r\n                ...state,\r\n                aboutYou: action.payload,\r\n            }\r\n        case 'userChangedGender': {\r\n            return {\r\n                ...state,\r\n                gender: action.payload\r\n            }\r\n        }\r\n        case 'userChangedLivingIn': {\r\n            return {\r\n                ...state,\r\n                country: action.payload\r\n            }\r\n        }\r\n        case 'userChangedPassions': {\r\n            return {\r\n                ...state,\r\n                passions: action.payload\r\n            }\r\n        }\r\n        case 'userChangedOrientation': {\r\n            return {\r\n                ...state,\r\n                sexualOrientation: action.payload\r\n            }\r\n        }\r\n        case 'userChangedJobTitle': {\r\n            return {\r\n                ...state,\r\n                jobTitle: action.payload\r\n            }\r\n        }\r\n        case 'userChangedCompany': {\r\n            return {\r\n                ...state,\r\n                company: action.payload\r\n            }\r\n        }\r\n        case 'userChangedCollegeOrUni': {\r\n            return {\r\n                ...state,\r\n                collageOrUni: action.payload\r\n            }\r\n        }\r\n        case 'userChangedliked': {\r\n            return {\r\n                ...state,\r\n                liked: [...state.liked, action.payload]\r\n            }\r\n        }\r\n        case 'userChangeddisliked': {\r\n            return {\r\n                ...state,\r\n                disliked: [...state.disliked, action.payload]\r\n            }\r\n        }\r\n        case 'userChangedmatches': {\r\n            return {\r\n                ...state,\r\n                matches: [...state.matches, action.payload]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default userReducer;","const initialState = [];\r\n\r\nconst allUsersReducer = (state = initialState, action) => {\r\n    switch (action.type){\r\n        case 'getAllUsers':\r\n            return [\r\n                ...action.payload,\r\n            ]\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport default allUsersReducer;","import { createStore, combineReducers, compose, applyMiddleware } from 'redux';\r\nimport userReducer from '../components/login-register/login-register.reducer';\r\nimport allUsersReducer from '../components/users/users.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n\r\n    currentUser: userReducer,\r\n    allUsers: allUsersReducer,\r\n\r\n});\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    compose(\r\n        // applyMiddleware(thunk),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    ));\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/App';\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\nimport 'fontsource-roboto';\r\nimport { Provider } from 'react-redux';\r\nimport store from './redux/store';\r\nimport { CssBaseline } from '@material-ui/core';\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <Router>\r\n        <CssBaseline>\r\n          <App />\r\n        </CssBaseline>\r\n      </Router>\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chatContainer\":\"Chat_chatContainer__EIVcp\",\"profilesInChat\":\"Chat_profilesInChat__1b0GJ\",\"innerDivChat\":\"Chat_innerDivChat__1tiQw\",\"chat\":\"Chat_chat__2m_BP\",\"active\":\"Chat_active__1M-Oi\",\"missedMsg\":\"Chat_missedMsg__2RkTA\",\"messageContainer\":\"Chat_messageContainer__1EKLz\",\"chatForm\":\"Chat_chatForm__3DKZ9\",\"sign-in\":\"Chat_sign-in__3iGNs\",\"message\":\"Chat_message__Y278M\",\"sent\":\"Chat_sent__3suxQ\",\"received\":\"Chat_received__vZeoR\",\"heads\":\"Chat_heads___BcZl\"};"],"sourceRoot":""}